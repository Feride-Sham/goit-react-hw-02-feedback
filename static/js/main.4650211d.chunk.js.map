{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","buttonBox","map","option","type","name","onClick","button","Statistics","good","neutral","bad","total","positivePercentage","statBox","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","ev","target","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCmBQC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SACLC,KAAMF,EAENG,QAASR,EACTC,UAAWC,IAAEO,OALf,SAOGJ,GAJIA,S,gBCWAK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKd,UAAWC,IAAEc,QAAlB,UACE,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCDWE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiE3BC,G,kNA3DbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPQ,mBAAqB,WAAO,IAAD,EACM,EAAKD,MACpC,OAFyB,EACjBT,KADiB,EACXC,QADW,EACFC,K,EAKzBS,gCAAkC,WAAO,IAC/BX,EAAS,EAAKS,MAAdT,KACFG,EAAQ,EAAKO,qBACnB,OAAOP,EAAQ,EAAIS,KAAKC,MAAOb,EAAOG,EAAS,KAAO,G,EAIxDd,gBAAkB,SAACyB,GACjB,IAAMlB,EAAOkB,EAAGC,OAAOnB,KACvB,EAAKoB,UAAS,SAACC,GAAD,sBAAmBrB,EAAOqB,EAAUrB,GAAQ,O,4CAG5D,WAAU,IAAD,EACwBsB,KAAKT,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBQ,EAAqBQ,KAAKR,qBAC1BC,EAAkCO,KAAKP,kCACvCtB,EAAkB6B,KAAK7B,gBAE7B,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CAASL,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBA,MAIpBqB,EAAqB,EACpB,cAAC,EAAD,CAASzB,MAAO,aAAhB,SACE,cAAC,EAAD,CACEe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,EACPN,mBAAoBO,MAIxB,cAAC,EAAD,CAAcJ,QAAS,6B,GApDfY,c,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,kBCA1ED,EAAOC,QAAU,CAAC,QAAU,+B","file":"static/js/main.4650211d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.buttonBox}>\r\n      {options.map((option) => (\r\n        <button\r\n          type=\"button\"\r\n          name={option}\r\n          key={option}\r\n          onClick={onLeaveFeedback}\r\n          className={s.button}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={s.statBox}>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}%</p>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // счиатет общее кол-во оценок\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  // считает процент положительных оценок\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  // записывает оценку\n  onLeaveFeedback = (ev) => {\n    const name = ev.target.name;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    const onLeaveFeedback = this.onLeaveFeedback;\n\n    return (\n      <div className=\"App\">\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n\n        {countTotalFeedback > 0 ? (\n          <Section title={\"Statistics\"}>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          </Section>\n        ) : (\n          <Notification message={\"No feedback given\"} />\n          // <p>No feedback given</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonBox\":\"FeedbackOptions_buttonBox__3xHH-\",\"button\":\"FeedbackOptions_button__1_1oS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statBox\":\"Statistics_statBox__21vFB\"};"],"sourceRoot":""}